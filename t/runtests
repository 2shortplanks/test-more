#!/usr/bin/perl -w

# Test harness for Aegis' batch_test_command.  Not for general consumption.

use File::Spec;
use Test::Harness;
use Getopt::Long;

my %Opts;
GetOptions(\%Opts, "aegis_output=s");
die "Usage: runtests --aegis_output=\${Output} \${File_Name}\n"
  unless $Opts{aegis_output};

my $strap = Test::Harness::Straps::Aegis->new;
$strap->{callback} = $Test::Harness::Strap->{callback};
$Test::Harness::Strap = $strap;

open AEGIS_OUT, ">$Opts{aegis_output}" or 
    die "Can't open $Opts{aegis_output}: $!";
print AEGIS_OUT <<"END";
test_result = [
END

{
    local $ENV{AEGIS_TMPDIR} = File::Spec->tmpdir;
    eval { runtests @ARGV; };
    warn $@ if $@;
}

print AEGIS_OUT <<"END";
];
END


package Test::Harness::Straps::Aegis;

use base 'Test::Harness::Straps';

sub analyze_file {
    my $self = shift;
    my $file = $_[0];

    my %results = $self->SUPER::analyze_file(@_);

    # 0 is pass, 1 is fail, anything else is not understood.
    my $exit = $results{passing} ? 0 : 1;
    print ::AEGIS_OUT <<"END";
    {
        file_name       = "$file";
        exit_status     = $exit;
    },
END

    return %results;
}

